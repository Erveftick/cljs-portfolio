["^ ","~:output",["^ ","~:js","goog.provide('garden.units');\ngarden.units.length_units = cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)]);\ngarden.units.angular_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),null,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),null,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),null,new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),null], null), null);\ngarden.units.time_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),null], null), null);\ngarden.units.frequency_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),null,new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),null], null), null);\ngarden.units.resolution_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843),null,new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236),null,new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832),null], null), null);\n/**\n * True if x is of type CSSUnit.\n */\ngarden.units.unit_QMARK_ = (function garden$units$unit_QMARK_(x){\nreturn (x instanceof garden.types.CSSUnit);\n});\ngarden.units.length_QMARK_ = (function garden$units$length_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.length_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.angle_QMARK_ = (function garden$units$angle_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.angular_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.time_QMARK_ = (function garden$units$time_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.time_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.frequency_QMARK_ = (function garden$units$frequency_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.frequency_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.resolution_QMARK_ = (function garden$units$resolution_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.resolution_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\n/**\n * Map associating CSS unit types to their conversion values.\n */\ngarden.units.conversions = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),new cljs.core.Keyword(null,\"em\",\"em\",707813035),new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),2.83464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),3.7795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(1),new cljs.core.Keyword(null,\"px\",\"px\",281329899),1.3333333333], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"px\",\"px\",281329899),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"em\",\"em\",707813035),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),(1),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),0.001], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),4.23333333,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(12),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(16)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),(1)]),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1000),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),(1)], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),(1),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),1.111111111,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),0.0174532925,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.002777778], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(10),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),2.36220473,new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),28.3464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),37.795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),(1),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.159154943], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),(1),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),63.661977237,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.0025], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),2.54,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),25.4,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(6),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(72),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(96)], null)]);\n/**\n * True if unit is a key of convertable-units, false otherwise.\n */\ngarden.units.convertable_QMARK_ = (function garden$units$convertable_QMARK_(unit){\nreturn cljs.core.contains_QMARK_(garden.units.conversions,unit);\n});\n/**\n * Convert a Unit with :unit left to a Unit with :unit right if possible.\n */\ngarden.units.convert = (function garden$units$convert(p__41399,right){\nvar map__41400 = p__41399;\nvar map__41400__$1 = cljs.core.__destructure_map(map__41400);\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41400__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar left = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41400__$1,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175));\nif(cljs.core.every_QMARK_(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null))){\nvar v1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null));\nvar v2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [right,left], null));\nif(cljs.core.truth_(v1)){\nreturn (new garden.types.CSSUnit(right,(v1 * m),null,null,null));\n} else {\nif(cljs.core.truth_(v2)){\nreturn (new garden.types.CSSUnit(right,(m / v2),null,null,null));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Can't convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(left),cljs.core.name(right)], 0)),cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n} else {\nvar x = cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null)));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Inconvertible unit \",cljs.core.name(x)].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Regular expression for matching a CSS unit. The magnitude\n *           and unit are captured.\n */\ngarden.units.unit_re = /([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))/;\n/**\n * Read a `CSSUnit` object from the string `s`.\n */\ngarden.units.read_unit = (function garden$units$read_unit(s){\nvar temp__5804__auto__ = cljs.core.re_matches(garden.units.unit_re,s);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__41407 = temp__5804__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41407,(0),null);\nvar magnitude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41407,(1),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41407,(2),null);\nvar unit__$1 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(unit);\nvar magnitude__$1 = (cljs.core.truth_(magnitude)?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(magnitude):(0));\nreturn (new garden.types.CSSUnit(unit__$1,magnitude__$1,null,null,null));\n} else {\nreturn null;\n}\n});\n/**\n * Creates a function for verifying the given unit type.\n */\ngarden.units.make_unit_predicate = (function garden$units$make_unit_predicate(unit){\nreturn (function (x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x),unit)));\n});\n});\n/**\n * Creates a function for creating and converting `CSSUnit`s for the\n *   given unit. If a number n is passed the function it will produce a\n *   new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n *   is passed the function will attempt to convert it.\n */\ngarden.units.make_unit_fn = (function garden$units$make_unit_fn(unit){\nreturn (function (x){\nif(typeof x === 'number'){\nreturn (new garden.types.CSSUnit(unit,x,null,null,null));\n} else {\nif(garden.units.unit_QMARK_(x)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((unit.cljs$core$IFn$_invoke$arity$1 ? unit.cljs$core$IFn$_invoke$arity$1(x) : unit.call(null,x)),unit)){\nreturn x;\n} else {\nreturn garden.units.convert(x,unit);\n}\n} else {\nvar ex_message = garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Unable to convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x,cljs.core.name(unit)], 0));\nvar ex_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),x,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175),unit], null)], null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(ex_message,ex_data);\n\n}\n}\n});\n});\n/**\n * Create a addition function for adding Units.\n */\ngarden.units.make_unit_adder = (function garden$units$make_unit_adder(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_adder_$_u_PLUS_ = null;\nvar garden$units$make_unit_adder_$_u_PLUS___0 = (function (){\nreturn u((0));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_adder_$_u_PLUS___2 = (function (x,y){\nvar map__41418 = u(x);\nvar map__41418__$1 = cljs.core.__destructure_map(map__41418);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41418__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__41419 = u(y);\nvar map__41419__$1 = cljs.core.__destructure_map(map__41419);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41419__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 + m2));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___3 = (function() { \nvar G__41428__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_adder_$_u_PLUS_,garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__41428 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__41429__i = 0, G__41429__a = new Array(arguments.length -  2);\nwhile (G__41429__i < G__41429__a.length) {G__41429__a[G__41429__i] = arguments[G__41429__i + 2]; ++G__41429__i;}\n  more = new cljs.core.IndexedSeq(G__41429__a,0,null);\n} \nreturn G__41428__delegate.call(this,x,y,more);};\nG__41428.cljs$lang$maxFixedArity = 2;\nG__41428.cljs$lang$applyTo = (function (arglist__41430){\nvar x = cljs.core.first(arglist__41430);\narglist__41430 = cljs.core.next(arglist__41430);\nvar y = cljs.core.first(arglist__41430);\nvar more = cljs.core.rest(arglist__41430);\nreturn G__41428__delegate(x,y,more);\n});\nG__41428.cljs$core$IFn$_invoke$arity$variadic = G__41428__delegate;\nreturn G__41428;\n})()\n;\ngarden$units$make_unit_adder_$_u_PLUS_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_adder_$_u_PLUS___0.call(this);\ncase 1:\nreturn garden$units$make_unit_adder_$_u_PLUS___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_adder_$_u_PLUS___2.call(this,x,y);\ndefault:\nvar G__41431 = null;\nif (arguments.length > 2) {\nvar G__41432__i = 0, G__41432__a = new Array(arguments.length -  2);\nwhile (G__41432__i < G__41432__a.length) {G__41432__a[G__41432__i] = arguments[G__41432__i + 2]; ++G__41432__i;}\nG__41431 = new cljs.core.IndexedSeq(G__41432__a,0,null);\n}\nreturn garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__41431);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$applyTo = garden$units$make_unit_adder_$_u_PLUS___3.cljs$lang$applyTo;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_adder_$_u_PLUS___0;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_adder_$_u_PLUS___1;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_adder_$_u_PLUS___2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_adder_$_u_PLUS_;\n})()\n});\n/**\n * Create a subtraction function for subtracting Units.\n */\ngarden.units.make_unit_subtractor = (function garden$units$make_unit_subtractor(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_subtractor_$_u_ = null;\nvar garden$units$make_unit_subtractor_$_u___1 = (function (x){\nreturn u((- x));\n});\nvar garden$units$make_unit_subtractor_$_u___2 = (function (x,y){\nvar map__41420 = u(x);\nvar map__41420__$1 = cljs.core.__destructure_map(map__41420);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41420__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__41421 = u(y);\nvar map__41421__$1 = cljs.core.__destructure_map(map__41421);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41421__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 - m2));\n});\nvar garden$units$make_unit_subtractor_$_u___3 = (function() { \nvar G__41433__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_subtractor_$_u_,garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__41433 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__41434__i = 0, G__41434__a = new Array(arguments.length -  2);\nwhile (G__41434__i < G__41434__a.length) {G__41434__a[G__41434__i] = arguments[G__41434__i + 2]; ++G__41434__i;}\n  more = new cljs.core.IndexedSeq(G__41434__a,0,null);\n} \nreturn G__41433__delegate.call(this,x,y,more);};\nG__41433.cljs$lang$maxFixedArity = 2;\nG__41433.cljs$lang$applyTo = (function (arglist__41435){\nvar x = cljs.core.first(arglist__41435);\narglist__41435 = cljs.core.next(arglist__41435);\nvar y = cljs.core.first(arglist__41435);\nvar more = cljs.core.rest(arglist__41435);\nreturn G__41433__delegate(x,y,more);\n});\nG__41433.cljs$core$IFn$_invoke$arity$variadic = G__41433__delegate;\nreturn G__41433;\n})()\n;\ngarden$units$make_unit_subtractor_$_u_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_subtractor_$_u___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_subtractor_$_u___2.call(this,x,y);\ndefault:\nvar G__41436 = null;\nif (arguments.length > 2) {\nvar G__41437__i = 0, G__41437__a = new Array(arguments.length -  2);\nwhile (G__41437__i < G__41437__a.length) {G__41437__a[G__41437__i] = arguments[G__41437__i + 2]; ++G__41437__i;}\nG__41436 = new cljs.core.IndexedSeq(G__41437__a,0,null);\n}\nreturn garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__41436);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$applyTo = garden$units$make_unit_subtractor_$_u___3.cljs$lang$applyTo;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_subtractor_$_u___1;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_subtractor_$_u___2;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_subtractor_$_u_;\n})()\n});\n/**\n * Create a multiplication function for multiplying Units.\n */\ngarden.units.make_unit_multiplier = (function garden$units$make_unit_multiplier(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_multiplier_$_percent_STAR_(x,y){\nreturn ((x * y) / (100));\n}):cljs.core._STAR_);\nreturn (function() {\nvar garden$units$make_unit_multiplier_$_u_STAR_ = null;\nvar garden$units$make_unit_multiplier_$_u_STAR___0 = (function (){\nreturn u((1));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___2 = (function (x,y){\nvar map__41422 = u(x);\nvar map__41422__$1 = cljs.core.__destructure_map(map__41422);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41422__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__41423 = u(y);\nvar map__41423__$1 = cljs.core.__destructure_map(map__41423);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41423__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___3 = (function() { \nvar G__41438__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_multiplier_$_u_STAR_,garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__41438 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__41439__i = 0, G__41439__a = new Array(arguments.length -  2);\nwhile (G__41439__i < G__41439__a.length) {G__41439__a[G__41439__i] = arguments[G__41439__i + 2]; ++G__41439__i;}\n  more = new cljs.core.IndexedSeq(G__41439__a,0,null);\n} \nreturn G__41438__delegate.call(this,x,y,more);};\nG__41438.cljs$lang$maxFixedArity = 2;\nG__41438.cljs$lang$applyTo = (function (arglist__41440){\nvar x = cljs.core.first(arglist__41440);\narglist__41440 = cljs.core.next(arglist__41440);\nvar y = cljs.core.first(arglist__41440);\nvar more = cljs.core.rest(arglist__41440);\nreturn G__41438__delegate(x,y,more);\n});\nG__41438.cljs$core$IFn$_invoke$arity$variadic = G__41438__delegate;\nreturn G__41438;\n})()\n;\ngarden$units$make_unit_multiplier_$_u_STAR_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_multiplier_$_u_STAR___0.call(this);\ncase 1:\nreturn garden$units$make_unit_multiplier_$_u_STAR___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_multiplier_$_u_STAR___2.call(this,x,y);\ndefault:\nvar G__41441 = null;\nif (arguments.length > 2) {\nvar G__41442__i = 0, G__41442__a = new Array(arguments.length -  2);\nwhile (G__41442__i < G__41442__a.length) {G__41442__a[G__41442__i] = arguments[G__41442__i + 2]; ++G__41442__i;}\nG__41441 = new cljs.core.IndexedSeq(G__41442__a,0,null);\n}\nreturn garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__41441);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$applyTo = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$lang$applyTo;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_multiplier_$_u_STAR___0;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_multiplier_$_u_STAR___1;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_multiplier_$_u_STAR___2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_multiplier_$_u_STAR_;\n})()\n});\n/**\n * Create a division function for dividing Units.\n */\ngarden.units.make_unit_divider = (function garden$units$make_unit_divider(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_divider_$_percent_div(x,y){\nreturn ((100) * (x / y));\n}):cljs.core._SLASH_);\nreturn (function() {\nvar garden$units$make_unit_divider_$_ud = null;\nvar garden$units$make_unit_divider_$_ud__1 = (function (x){\nreturn u(((1) / x));\n});\nvar garden$units$make_unit_divider_$_ud__2 = (function (x,y){\nvar map__41424 = u(x);\nvar map__41424__$1 = cljs.core.__destructure_map(map__41424);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41424__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__41425 = u(y);\nvar map__41425__$1 = cljs.core.__destructure_map(map__41425);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41425__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_divider_$_ud__3 = (function() { \nvar G__41443__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_divider_$_ud,garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__41443 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__41444__i = 0, G__41444__a = new Array(arguments.length -  2);\nwhile (G__41444__i < G__41444__a.length) {G__41444__a[G__41444__i] = arguments[G__41444__i + 2]; ++G__41444__i;}\n  more = new cljs.core.IndexedSeq(G__41444__a,0,null);\n} \nreturn G__41443__delegate.call(this,x,y,more);};\nG__41443.cljs$lang$maxFixedArity = 2;\nG__41443.cljs$lang$applyTo = (function (arglist__41445){\nvar x = cljs.core.first(arglist__41445);\narglist__41445 = cljs.core.next(arglist__41445);\nvar y = cljs.core.first(arglist__41445);\nvar more = cljs.core.rest(arglist__41445);\nreturn G__41443__delegate(x,y,more);\n});\nG__41443.cljs$core$IFn$_invoke$arity$variadic = G__41443__delegate;\nreturn G__41443;\n})()\n;\ngarden$units$make_unit_divider_$_ud = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_divider_$_ud__1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_divider_$_ud__2.call(this,x,y);\ndefault:\nvar G__41448 = null;\nif (arguments.length > 2) {\nvar G__41449__i = 0, G__41449__a = new Array(arguments.length -  2);\nwhile (G__41449__i < G__41449__a.length) {G__41449__a[G__41449__i] = arguments[G__41449__i + 2]; ++G__41449__i;}\nG__41448 = new cljs.core.IndexedSeq(G__41449__a,0,null);\n}\nreturn garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__41448);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_divider_$_ud.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_divider_$_ud.cljs$lang$applyTo = garden$units$make_unit_divider_$_ud__3.cljs$lang$applyTo;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_divider_$_ud__1;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_divider_$_ud__2;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_divider_$_ud;\n})()\n});\ngarden.units.cm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\ngarden.units.mm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\ngarden.units.in$ = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\ngarden.units.px = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\ngarden.units.pt = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\ngarden.units.pc = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\ngarden.units.percent = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\ngarden.units.em = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\ngarden.units.ex = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\ngarden.units.ch = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\ngarden.units.rem = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\ngarden.units.vw = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\ngarden.units.vh = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\ngarden.units.vmin = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\ngarden.units.vmax = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\ngarden.units.deg = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\ngarden.units.grad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\ngarden.units.rad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\ngarden.units.turn = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\ngarden.units.s = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\ngarden.units.ms = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\ngarden.units.Hz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\ngarden.units.kHz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\ngarden.units.dpi = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\ngarden.units.dpcm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\ngarden.units.dppx = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions and macros for working with CSS units.","~:file","garden/units.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",["^ ","~$defunit","~$garden.units"],"~:excludes",["~#set",["~$rem"]],"~:macros",["^ ","^D",["^ ","~:arglists",["~#list",[["~$name"],["^L","~$unit"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",260,"^9",4,"^7","garden/units.cljc","~:name","~$garden.units/defunit","~:ns","^E","~:macro",true]],"^N","^E","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$cljs.reader","^V","~$garden.types","^W","~$types","^W","~$garden.util","^Y","~$util","^Y","~$cljs.core","^[","~$goog","^10"],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",["^ ","~$read-string","^V","~$CSSUnit","^W"],"^13",["^ ","^E","^E","^[","^[","^V","^V"],"~:form",["^K",["~$ns","^E","Functions and macros for working with CSS units.",["^K",["~:refer-clojure","~:exclude",["^H"]]],["^K",["^12",["^V","~:refer",["^15"]],["^W","~:as","^X","^1;",["^16"]],["^Y","^1<","^Z"]]],["^K",["^13",["^E","^1;",["^D"]]]]]],"~:flags",["^ ","^12",["^G",[]],"^13",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^10","^[","^V","^W","^Y"]],"^P","^E","~:resource-id",["~:shadow.build.classpath/resource","garden/units.cljc"],"~:compiled-at",1706049319157,"^R",["^ ","^V","^V","^W","^W","^X","^W","^Y","^Y","^Z","^Y","^[","^[","^10","^10","^E","^E"],"~:resource-name","garden/units.cljc","~:warnings",[],"~:source","(ns garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [garden.types :as types]\n       [garden.util :as util])\n      (:import\n       [garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [garden.types :as types :refer [CSSUnit]]\n        [garden.util :as util])\n       (:require-macros\n        [garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [ex-message (util/format \"Unable to convert %s to %s\"\n                                    x\n                                    (name unit))\n            ex-data {:given {:x x\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u  (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent*\n              [x y]\n              (/ (* x y) 100))\n            *)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent-div\n              [x y]\n              (* 100 (/ x y)))\n             /)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["garden.units/length-units","cljs.core.keyword","garden.units/angular-units","garden.units/time-units","garden.units/frequency-units","garden.units/resolution-units","garden.units/unit?","x","garden.types/CSSUnit","garden.units/length?","cljs.core/contains?","garden.units/angle?","garden.units/time?","garden.units/frequency?","garden.units/resolution?","garden.units/conversions","garden.units/convertable?","unit","p__41399","map__41400","cljs.core/--destructure-map","cljs.core.get","garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in","v2","cljs.core.ex_info","garden.util.format","cljs.core/name","cljs.core/first","cljs.core.drop_while","garden.units/unit-re","garden.units/read-unit","s","temp__5804__auto__","vec__41407","cljs.core.nth","_","magnitude","cljs.core/re-matches","cljs.reader.read_string","garden.units/make-unit-predicate","cljs.core._EQ_","garden.units/make-unit-fn","ex-message","ex-data","garden.units/make-unit-adder","u","y","map__41418","map__41419","m1","m2","more","cljs.core.reduce","u+","garden$units$make_unit_adder_$_u_PLUS_","garden.units/make-unit-subtractor","map__41420","map__41421","u-","garden$units$make_unit_subtractor_$_u_","garden.units/make-unit-multiplier","op","cljs.core/*","map__41422","map__41423","u*","garden$units$make_unit_multiplier_$_u_STAR_","garden.units/make-unit-divider","cljs.core//","map__41424","map__41425","ud","garden$units$make_unit_divider_$_ud","garden.units/cm?","garden.units/cm+","garden.units/cm-","garden.units/cm*","garden.units/cm-div","garden.units/cm","garden.units/mm?","garden.units/mm+","garden.units/mm-","garden.units/mm*","garden.units/mm-div","garden.units/mm","garden.units/in?","garden.units/in+","garden.units/in-","garden.units/in*","garden.units/in-div","garden.units/in","garden.units/px?","garden.units/px+","garden.units/px-","garden.units/px*","garden.units/px-div","garden.units/px","garden.units/pt?","garden.units/pt+","garden.units/pt-","garden.units/pt*","garden.units/pt-div","garden.units/pt","garden.units/pc?","garden.units/pc+","garden.units/pc-","garden.units/pc*","garden.units/pc-div","garden.units/pc","garden.units/percent?","garden.units/percent+","garden.units/percent-","garden.units/percent*","garden.units/percent-div","garden.units/percent","garden.units/em?","garden.units/em+","garden.units/em-","garden.units/em*","garden.units/em-div","garden.units/em","garden.units/ex?","garden.units/ex+","garden.units/ex-","garden.units/ex*","garden.units/ex-div","garden.units/ex","garden.units/ch?","garden.units/ch+","garden.units/ch-","garden.units/ch*","garden.units/ch-div","garden.units/ch","garden.units/rem?","garden.units/rem+","garden.units/rem-","garden.units/rem*","garden.units/rem-div","garden.units/rem","garden.units/vw?","garden.units/vw+","garden.units/vw-","garden.units/vw*","garden.units/vw-div","garden.units/vw","garden.units/vh?","garden.units/vh+","garden.units/vh-","garden.units/vh*","garden.units/vh-div","garden.units/vh","garden.units/vmin?","garden.units/vmin+","garden.units/vmin-","garden.units/vmin*","garden.units/vmin-div","garden.units/vmin","garden.units/vmax?","garden.units/vmax+","garden.units/vmax-","garden.units/vmax*","garden.units/vmax-div","garden.units/vmax","garden.units/deg?","garden.units/deg+","garden.units/deg-","garden.units/deg*","garden.units/deg-div","garden.units/deg","garden.units/grad?","garden.units/grad+","garden.units/grad-","garden.units/grad*","garden.units/grad-div","garden.units/grad","garden.units/rad?","garden.units/rad+","garden.units/rad-","garden.units/rad*","garden.units/rad-div","garden.units/rad","garden.units/turn?","garden.units/turn+","garden.units/turn-","garden.units/turn*","garden.units/turn-div","garden.units/turn","garden.units/s?","garden.units/s+","garden.units/s-","garden.units/s*","garden.units/s-div","garden.units/s","garden.units/ms?","garden.units/ms+","garden.units/ms-","garden.units/ms*","garden.units/ms-div","garden.units/ms","garden.units/Hz?","garden.units/Hz+","garden.units/Hz-","garden.units/Hz*","garden.units/Hz-div","garden.units/Hz","garden.units/kHz?","garden.units/kHz+","garden.units/kHz-","garden.units/kHz*","garden.units/kHz-div","garden.units/kHz","garden.units/dpi?","garden.units/dpi+","garden.units/dpi-","garden.units/dpi*","garden.units/dpi-div","garden.units/dpi","garden.units/dpcm?","garden.units/dpcm+","garden.units/dpcm-","garden.units/dpcm*","garden.units/dpcm-div","garden.units/dpcm","garden.units/dppx?","garden.units/dppx+","garden.units/dppx-","garden.units/dppx*","garden.units/dppx-div","garden.units/dppx"]],"~:used-vars",["^G",["~$garden.units/ex","~$cljs.core/--destructure-map","~$garden.units/vmin*","~$garden.units/resolution-units","~$garden.units/ms-div","~$garden.units/vmax-","~$garden.units/frequency?","~$garden.units/deg+","~$garden.units/dpi","~$cljs.core/keyword","~$garden.units/turn-","~$garden.units/Hz-div","~$garden.units/grad*","~$garden.units/dpi?","~$garden.units/px-div","~$garden.units/pc?","~$garden.units/vmin-","~$garden.units/ex?","~$garden.units/ms?","~$garden.units/vh*","~$garden.units/vh","~$garden.units/ex+","~$garden.units/turn-div","~$garden.units/in-","~$garden.units/in-div","~$garden.units/px+","~$garden.units/px","~$cljs.core/=","~$garden.units/grad+","~$garden.units/pt-","~$garden.units/px?","~$cljs.core/re-matches","~$garden.units/vmax","~$garden.units/rem?","~$garden.units/Hz*","~$garden.units/px*","~$garden.units/s+","~$garden.units/rad?","~$cljs.core/drop-while","~$garden.types/CSSUnit","~$garden.units/pt-div","~$garden.units/dppx?","~$garden.units/vw+","~$garden.units/Hz+","~$garden.units/turn*","~$cljs.core/reduce","~$garden.units/time-units","~$garden.units/in?","~$garden.units/pt+","~$garden.units/kHz-","~$garden.units/dppx*","~$garden.units/s-div","~$garden.units/ms+","~$garden.units/pc+","~$garden.units/ms","~$garden.units/vw","~$garden.units/px-","~$garden.units/in+","~$garden.units/length?","~$garden.units/cm","~$garden.units/pc","~$garden.units/grad-","~$garden.units/mm?","~$garden.units/dpi-","~$garden.units/pt?","~$garden.units/dppx-div","~$garden.units/percent","~$garden.units/ex*","~$garden.units/pt*","~$garden.units/dpcm?","~$garden.units/s*","~$garden.units/mm+","~$garden.units/ms*","~$garden.units/pc*","~$garden.units/ch","~$garden.units/deg","~$cljs.core/contains?","~$garden.units/dpcm-","~$garden.units/turn","~$garden.units/kHz*","~$garden.units/vh+","~$garden.units/angle?","~$garden.units/make-unit-divider","~$garden.units/mm*","~$garden.units/cm*","~$garden.units/dpi-div","~$garden.units/rad*","~$garden.units/rem-","~$garden.units/vmax?","~$garden.units/ex-div","~$garden.units/make-unit-predicate","~$garden.units/mm-","~$garden.units/vh?","~$garden.units/rem*","~$garden.units/turn?","~$cljs.core//","~$garden.units/cm+","~$cljs.core/get-in","~$garden.units/resolution?","~$garden.units/deg?","~$garden.units/s-","~$garden.units/ch-div","~$garden.units/cm-","~$garden.units/frequency-units","~$garden.units/em?","~$garden.units/mm","~$garden.units/rem-div","~$garden.units/rad+","~$garden.units/kHz?","~$garden.units/ex-","~$garden.units/ch?","~$garden.units/make-unit-subtractor","~$garden.units/dpcm*","~$garden.units/vh-div","~$garden.units/read-unit","~$garden.units/pc-","~$garden.units/mm-div","~$cljs.core/get","~$garden.units/conversions","~$garden.units/grad-div","~$garden.units/deg-","~$garden.units/percent-","~$garden.units/make-unit-multiplier","~$garden.units/kHz","~$garden.units/deg-div","~$garden.units/unit?","~$garden.units/convertable?","~$garden.units/unit-re","~$garden.units/dpcm+","~$garden.units/em+","~$garden.units/make-unit-adder","~$cljs.core/*","~$garden.util/format","~$garden.units/percent?","~$garden.units/turn+","~$garden.units/em-","~$garden.units/cm-div","~$cljs.core/nth","~$cljs.core/ex-info","~$garden.units/Hz-","~$garden.units/rem+","~$garden.units/percent-div","~$garden.units/cm?","~$garden.units/time?","~$garden.units/vh-","~$garden.units/convert","~$garden.units/ch-","~$garden.units/percent*","~$garden.units/vw-div","~$garden.units/dppx","~$garden.units/vmax+","~$garden.units/ch*","~$garden.units/in","~$garden.units/em-div","~$garden.units/make-unit-fn","~$garden.units/vmin+","~$garden.units/em","~$garden.units/in*","~$garden.units/rad","~$garden.units/Hz","~$garden.units/vmin","~$garden.units/dpi*","~$garden.units/vmin?","~$garden.units/rad-div","~$garden.units/vmax*","~$garden.units/ch+","~$garden.units/grad","~$garden.units/em*","~$cljs.reader/read-string","~$garden.units/length-units","~$garden.units/s?","~$garden.units/dpcm-div","~$garden.units/Hz?","~$garden.units/grad?","~$garden.units/vw*","~$garden.units/angular-units","~$cljs.core/first","~$garden.units/pt","~$garden.units/kHz-div","~$garden.units/rem","~$garden.units/kHz+","~$garden.units/dppx+","~$garden.units/dpcm","~$garden.units/rad-","~$garden.units/vmax-div","~$garden.units/vmin-div","~$cljs.core/name","~$cljs.core/every?","~$garden.units/dpi+","~$garden.units/deg*","~$garden.units/dppx-","~$garden.units/percent+","~$garden.units/ms-","~$garden.units/s","~$garden.units/vw-","~$garden.units/pc-div","~$garden.units/vw?"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1A","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","~$clojure.string","~$goog.string"]]],["^1A","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6>"]]],["^1A","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^6B"]]],["^1A","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C"]]],["^1A","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","garden/units.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^V","^W","^Y"]]],["^1A","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^6>","~$goog.string.StringBuffer"]]],["^1A","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^["]]],["^1A","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6K","^6L","^6M","^6J","^6?","^6>","^6O"]]],["^1A","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C"]]],"~:SHADOW-TIMESTAMP",[1698905987000,1698905987000,1698031588000],["^1A","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","~$goog.fs.blob","^6D","~$goog.html.SafeScript","~$goog.html.trustedtypes","^6F","^6G","^6H","^6I"]]],["^1A","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6H","~$goog.html.SafeUrl","^6I","^6C","^6B"]]],["^1A","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^6S","~$goog.html.SafeStyle","^6U","^6E","~$goog.html.uncheckedconversions","^6H","^6B"]]],["^1A","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6H","^6F","^6G","^6S","^6Y","~$goog.html.SafeStyleSheet","^6U","~$goog.dom.TagName","^6E","^6I","^6C","~$goog.labs.userAgent.browser","^6?","^6@","^6B","~$goog.dom.tags","^6T"]]],["^1A","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6@"]]],["^1A","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6@","^6N","~$cljs.tools.reader.edn","^6O"]]],["^1A","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","garden/types.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^["]]],["^1A","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6?","^6C","~$goog.collections.maps","^6>","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",[]]],["^1A","garden/util.cljc"],["c54b1d4a503890dd6f9bccea320b8ec76e68bee8","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6=","^W","^6>","~$goog.string.format"]]],["^1A","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6?","^6@"]]],["^1A","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6K","^6=","~$cljs.tools.reader.impl.inspect"]]],["^1A","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6>","^6O"]]],["^1A","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.dom.safe","^6Z","^6H","^6B"]]],["^1A","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.labs.userAgent","^6B"]]],["^1A","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6L","^6>","^6O"]]],["^1A","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","^6X","^6S","^6Y","^6[","^6U","^6E","^6H","^6B","^6F"]]],["^1A","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^[","^6J","^6K","^6L"]]],["^1A","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10"]]],["^1A","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","~$goog.math.Long","~$goog.math.Integer","^6>","^6@","^6?","~$goog.Uri","^6O"]]],["^1A","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6H","^6I","^6T","^6C"]]],["^1A","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6H","^6Y","^6I","^6@","^6C","^6B"]]],["^1A","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6Q"]]],["^1A","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","^6>"]]],["^1A","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^68",["^ ","^69",null,"^6:",["^G",[]],"^6;",["^10","^6C","^6I"]]]]],"~:clj-info",["^ ","jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/util.cljc",1698034255000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/types.cljc",1698034255000,"jar:file:/Users/ekvashyn/.m2/repository/garden/garden/1.3.10/garden-1.3.10.jar!/garden/units.cljc",1698034255000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1698034252000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1698031588000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1698026749000,"jar:file:/Users/ekvashyn/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1698026749000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions and macros for working with CSS units.","^7","garden/units.cljc","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",["^ ","^D","^E"],"^F",["^G",["^H"]],"^I",["^ ","^D",["^ ","^J",["^K",[["^L"],["^L","^M"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",260,"^9",4,"^7","garden/units.cljc","^N","^O","^P","^E","^Q",true]],"^N","^E","^R",["^ "],"^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^W","^Y","^Y","^Z","^Y","^[","^[","^10","^10"],"^11",["^G",["^12","^13"]],"^14",["^ ","^15","^V","^16","^W"],"~:defs",["^ ","~$percent",["^ ","^N","^37","^7","garden/units.cljc","^8",297,"^9",1,"^:",297,"^;",17,"^5",["^ ","^7","garden/units.cljc","^8",297,"^9",10,"^:",297,"^;",17],"~:tag","~$function"],"~$make-unit-divider",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/units.cljc","^8",241,"^9",7,"^:",241,"^;",24,"^J",["^K",["~$quote",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"^N","^3G","^7","garden/units.cljc","^;",24,"~:method-params",["^K",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^9",1,"~:variadic?",false,"^8",241,"~:ret-tag","^8=","^:",241,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"~$mm?",["^ ","^N","^33","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^8<","^8="],"~$rad-div",["^ ","^N","^5@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^8<","^8="],"~$ch+",["^ ","^N","^5B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8<","^8="],"~$vmax?",["^ ","^N","^3M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8<","^8="],"~$percent*",["^ ","^N","^50","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8<","^8="],"~$dpi-div",["^ ","^N","^3J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^8<","^8="],"~$s*",["^ ","^N","^3;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^8<","^8="],"~$ms",["^ ","^N","^2W","^7","garden/units.cljc","^8",323,"^9",1,"^:",323,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",323,"^9",10,"^:",323,"^;",12],"^8<","^8="],"~$ms*",["^ ","^N","^3=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^8<","^8="],"~$convertable?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",122,"^9",8,"^:",122,"^;",20,"~:private",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"^8R",true,"^N","^4G","^7","garden/units.cljc","^;",20,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",122,"^8E","~$boolean","^:",122,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"~$dpcm+",["^ ","^N","^4I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^8<","^8="],"~$dppx*",["^ ","^N","^2S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^8<","^8="],"~$ch*",["^ ","^N","^54","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8<","^8="],"~$mm+",["^ ","^N","^3<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^8<","^8="],"~$rad",["^ ","^N","^5;","^7","garden/units.cljc","^8",317,"^9",1,"^:",317,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",317,"^9",10,"^:",317,"^;",13],"^8<","^8="],"~$px-",["^ ","^N","^2Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8<","^8="],"~$cm-div",["^ ","^N","^4Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^8<","^8="],"~$turn+",["^ ","^N","^4O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^8<","^8="],"~$length?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",42,"^9",7,"^:",42,"^;",14,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"^N","^2[","^7","garden/units.cljc","^;",14,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",42,"^8E","^8S","^:",42,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"~$grad",["^ ","^N","^5C","^7","garden/units.cljc","^8",316,"^9",1,"^:",316,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",316,"^9",10,"^:",316,"^;",14],"^8<","^8="],"~$dppx-",["^ ","^N","^5[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^8<","^8="],"~$percent+",["^ ","^N","^60","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8<","^8="],"~$em*",["^ ","^N","^5D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8<","^8="],"~$ms-",["^ ","^N","^61","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^8<","^8="],"~$dpi+",["^ ","^N","^5Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^8<","^8="],"~$vh+",["^ ","^N","^3E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8<","^8="],"~$rad*",["^ ","^N","^3K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^8<","^8="],"~$kHz-div",["^ ","^N","^5O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^8<","^8="],"~$vmax+",["^ ","^N","^53","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8<","^8="],"~$vw-div",["^ ","^N","^51","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8<","^8="],"~$mm-",["^ ","^N","^3P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^8<","^8="],"~$in",["^ ","^N","^55","^7","garden/units.cljc","^8",293,"^9",1,"^:",293,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",293,"^9",10,"^:",293,"^;",12],"^8<","^8="],"~$pt*",["^ ","^N","^39","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8<","^8="],"~$make-unit-subtractor",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",209,"^9",7,"^:",209,"^;",27,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"^N","^48","^7","garden/units.cljc","^;",27,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",209,"^8E","^8=","^:",209,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"~$mm-div",["^ ","^N","^4=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^8<","^8="],"~$vmin",["^ ","^N","^5=","^7","garden/units.cljc","^8",310,"^9",1,"^:",310,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",310,"^9",10,"^:",310,"^;",14],"^8<","^8="],"~$mm",["^ ","^N","^42","^7","garden/units.cljc","^8",292,"^9",1,"^:",292,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",292,"^9",10,"^:",292,"^;",12],"^8<","^8="],"~$em?",["^ ","^N","^41","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8<","^8="],"~$cm?",["^ ","^N","^4W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^8<","^8="],"~$time?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",52,"^9",7,"^:",52,"^;",12,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"^N","^4X","^7","garden/units.cljc","^;",12,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",52,"^8E","^8S","^:",52,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"~$dpi?",["^ ","^N","^1Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^8<","^8="],"~$make-unit-multiplier",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",222,"^9",7,"^:",222,"^;",27,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"^N","^4C","^7","garden/units.cljc","^;",27,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",222,"^8E","^8=","^:",222,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"~$vmin-",["^ ","^N","^21","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8<","^8="],"~$unit?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",37,"^9",7,"^:",37,"^;",12,"^J",["^K",["^8@",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"^N","^4F","^7","garden/units.cljc","^;",12,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",37,"^8E","^8S","^:",37,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"~$deg-div",["^ ","^N","^4E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8<","^8="],"~$vw-",["^ ","^N","^63","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8<","^8="],"~$ch-",["^ ","^N","^4[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8<","^8="],"~$kHz",["^ ","^N","^4D","^7","garden/units.cljc","^8",328,"^9",1,"^:",328,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",328,"^9",10,"^:",328,"^;",13],"^8<","^8="],"~$convert",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",127,"^9",8,"^:",127,"^;",15,"^8R",true,"^J",["^K",["^8@",["^K",[[["^ ","~$m","~:magnitude","~$left","~:unit"],"~$right"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"^8R",true,"^N","^4Z","^7","garden/units.cljc","^;",15,"^8A",["^K",[["~$p__41399","^9R"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",127,"^8E","^2H","^:",127,"^8F",2,"^8G",true,"^J",["^K",["^8@",["^K",[[["^ ","~$m","^9O","^9P","^9Q"],"^9R"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"~$resolution?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",62,"^9",7,"^:",62,"^;",18,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"^N","^3W","^7","garden/units.cljc","^;",18,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",62,"^8E","^8S","^:",62,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"~$ch-div",["^ ","^N","^3Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8<","^8="],"~$cm-",["^ ","^N","^3[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^8<","^8="],"~$pt",["^ ","^N","^5N","^7","garden/units.cljc","^8",295,"^9",1,"^:",295,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",295,"^9",10,"^:",295,"^;",12],"^8<","^8="],"~$frequency-units",["^ ","^N","^40","^7","garden/units.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","garden/units.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^8<","~$cljs.core/ISet"],"~$grad?",["^ ","^N","^5J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8<","^8="],"~$vh?",["^ ","^N","^3Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8<","^8="],"~$make-unit-adder",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",195,"^9",7,"^:",195,"^;",22,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"^N","^4K","^7","garden/units.cljc","^;",22,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",195,"^8E","^8=","^:",195,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"~$vmin*",["^ ","^N","^1O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8<","^8="],"~$dpcm*",["^ ","^N","^49","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^8<","^8="],"~$read-unit",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",157,"^9",7,"^:",157,"^;",16,"^J",["^K",["^8@",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"^N","^4;","^7","garden/units.cljc","^;",16,"^8A",["^K",[["~$s"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",157,"^8E",["^G",["^2H","~$clj-nil"]],"^:",157,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"~$pc-",["^ ","^N","^4<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8<","^8="],"~$rad-",["^ ","^N","^5T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^8<","^8="],"~$px*",["^ ","^N","^2D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8<","^8="],"~$rem+",["^ ","^N","^4U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8<","^8="],"~$Hz-",["^ ","^N","^4T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8<","^8="],"~$length-units",["^ ","^N","^5F","^7","garden/units.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","garden/units.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^8<","^9Y"],"~$Hz+",["^ ","^N","^2L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8<","^8="],"~$pc?",["^ ","^N","^20","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8<","^8="],"~$pt-div",["^ ","^N","^2I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8<","^8="],"~$grad*",["^ ","^N","^1Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8<","^8="],"~$s+",["^ ","^N","^2E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^8<","^8="],"~$vh*",["^ ","^N","^24","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8<","^8="],"~$s?",["^ ","^N","^5G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^8<","^8="],"~$turn-div",["^ ","^N","^27","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^8<","^8="],"~$vh-",["^ ","^N","^4Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8<","^8="],"~$ex+",["^ ","^N","^26","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8<","^8="],"~$em+",["^ ","^N","^4J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8<","^8="],"~$vmax-",["^ ","^N","^1R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8<","^8="],"~$frequency?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",57,"^9",7,"^:",57,"^;",17,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"^N","^1S","^7","garden/units.cljc","^;",17,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",57,"^8E","^8S","^:",57,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"~$vmin+",["^ ","^N","^58","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8<","^8="],"~$deg+",["^ ","^N","^1T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8<","^8="],"~$grad+",["^ ","^N","^2=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8<","^8="],"~$dpi*",["^ ","^N","^5>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^8<","^8="],"~$pt-",["^ ","^N","^2>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8<","^8="],"~$deg*",["^ ","^N","^5Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8<","^8="],"~$vmax*",["^ ","^N","^5A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8<","^8="],"~$grad-",["^ ","^N","^32","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8<","^8="],"~$vmin?",["^ ","^N","^5?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8<","^8="],"~$Hz*",["^ ","^N","^2C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8<","^8="],"~$vw+",["^ ","^N","^2K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8<","^8="],"~$vw?",["^ ","^N","^65","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8<","^8="],"~$pt+",["^ ","^N","^2Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8<","^8="],"~$in?",["^ ","^N","^2P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^8<","^8="],"~$dpcm-div",["^ ","^N","^5H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^8<","^8="],"~$ex*",["^ ","^N","^38","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8<","^8="],"~$Hz?",["^ ","^N","^5I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8<","^8="],"~$px+",["^ ","^N","^2:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8<","^8="],"~$s-div",["^ ","^N","^2T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^8<","^8="],"^H",["^ ","^N","^5P","^7","garden/units.cljc","^8",304,"^9",1,"^:",304,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",304,"^9",10,"^:",304,"^;",13],"^8<","^8="],"~$em",["^ ","^N","^59","^7","garden/units.cljc","^8",301,"^9",1,"^:",301,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",301,"^9",10,"^:",301,"^;",12],"^8<","^8="],"~$em-div",["^ ","^N","^56","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8<","^8="],"~$make-unit-fn",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",170,"^9",7,"^:",170,"^;",19,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"^N","^57","^7","garden/units.cljc","^;",19,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",170,"^8E","^8=","^:",170,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"~$dppx",["^ ","^N","^52","^7","garden/units.cljc","^8",334,"^9",1,"^:",334,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",334,"^9",10,"^:",334,"^;",14],"^8<","^8="],"~$px",["^ ","^N","^2;","^7","garden/units.cljc","^8",294,"^9",1,"^:",294,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",294,"^9",10,"^:",294,"^;",12],"^8<","^8="],"~$px?",["^ ","^N","^2?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8<","^8="],"~$vmax-div",["^ ","^N","^5U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^8<","^8="],"~$rem?",["^ ","^N","^2B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8<","^8="],"~$vmin-div",["^ ","^N","^5V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",310,"^9",1,"^8<","^8="],"~$Hz",["^ ","^N","^5<","^7","garden/units.cljc","^8",327,"^9",1,"^:",327,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",327,"^9",10,"^:",327,"^;",12],"^8<","^8="],"~$in*",["^ ","^N","^5:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^8<","^8="],"~$dpcm",["^ ","^N","^5S","^7","garden/units.cljc","^8",333,"^9",1,"^:",333,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",333,"^9",10,"^:",333,"^;",14],"^8<","^8="],"~$dppx+",["^ ","^N","^5R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^8<","^8="],"~$ms?",["^ ","^N","^23","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^8<","^8="],"~$pc",["^ ","^N","^31","^7","garden/units.cljc","^8",296,"^9",1,"^:",296,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",296,"^9",10,"^:",296,"^;",12],"^8<","^8="],"~$pt?",["^ ","^N","^35","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^8<","^8="],"~$dppx-div",["^ ","^N","^36","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^8<","^8="],"~$kHz*",["^ ","^N","^3D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^8<","^8="],"~$dpi-",["^ ","^N","^34","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",332,"^9",1,"^8<","^8="],"~$px-div",["^ ","^N","^1[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^8<","^8="],"~$mm*",["^ ","^N","^3H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",292,"^9",1,"^8<","^8="],"~$in-",["^ ","^N","^28","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^8<","^8="],"~$pc-div",["^ ","^N","^64","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8<","^8="],"~$s",["^ ","^N","^62","^7","garden/units.cljc","^8",322,"^9",1,"^:",322,"^;",11,"^5",["^ ","^7","garden/units.cljc","^8",322,"^9",10,"^:",322,"^;",11],"^8<","^8="],"~$vh",["^ ","^N","^25","^7","garden/units.cljc","^8",309,"^9",1,"^:",309,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",309,"^9",10,"^:",309,"^;",12],"^8<","^8="],"~$pc*",["^ ","^N","^3>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8<","^8="],"~$pc+",["^ ","^N","^2V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^8<","^8="],"~$ms+",["^ ","^N","^2U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^8<","^8="],"~$kHz+",["^ ","^N","^5Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^8<","^8="],"~$vw",["^ ","^N","^2X","^7","garden/units.cljc","^8",308,"^9",1,"^:",308,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",308,"^9",10,"^:",308,"^;",12],"^8<","^8="],"~$deg",["^ ","^N","^3@","^7","garden/units.cljc","^8",315,"^9",1,"^:",315,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",315,"^9",10,"^:",315,"^;",13],"^8<","^8="],"~$vw*",["^ ","^N","^5K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",308,"^9",1,"^8<","^8="],"~$kHz-",["^ ","^N","^2R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^8<","^8="],"~$ch",["^ ","^N","^3?","^7","garden/units.cljc","^8",303,"^9",1,"^:",303,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",303,"^9",10,"^:",303,"^;",12],"^8<","^8="],"~$angular-units",["^ ","^N","^5L","^7","garden/units.cljc","^8",23,"^9",1,"^:",23,"^;",19,"^5",["^ ","^7","garden/units.cljc","^8",23,"^9",6,"^:",23,"^;",19],"^8<","^9Y"],"~$dpcm-",["^ ","^N","^3B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^8<","^8="],"~$turn",["^ ","^N","^3C","^7","garden/units.cljc","^8",318,"^9",1,"^:",318,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",318,"^9",10,"^:",318,"^;",14],"^8<","^8="],"~$turn-",["^ ","^N","^1W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^8<","^8="],"~$Hz-div",["^ ","^N","^1X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",327,"^9",1,"^8<","^8="],"~$in+",["^ ","^N","^2Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^8<","^8="],"~$dpi",["^ ","^N","^1U","^7","garden/units.cljc","^8",332,"^9",1,"^:",332,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",332,"^9",10,"^:",332,"^;",13],"^8<","^8="],"~$cm",["^ ","^N","^30","^7","garden/units.cljc","^8",291,"^9",1,"^:",291,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",291,"^9",10,"^:",291,"^;",12],"^8<","^8="],"~$cm*",["^ ","^N","^3I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^8<","^8="],"~$angle?",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"^N","^3F","^7","garden/units.cljc","^;",13,"^8A",["^K",[["~$x"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",47,"^8E","^8S","^:",47,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["~$x"]]]]]],"~$ex?",["^ ","^N","^22","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8<","^8="],"~$grad-div",["^ ","^N","^4@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",316,"^9",1,"^8<","^8="],"~$rem-",["^ ","^N","^3L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8<","^8="],"~$deg?",["^ ","^N","^3X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8<","^8="],"~$ms-div",["^ ","^N","^1Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",323,"^9",1,"^8<","^8="],"~$s-",["^ ","^N","^3Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",322,"^9",1,"^8<","^8="],"~$resolution-units",["^ ","^N","^1P","^7","garden/units.cljc","^8",32,"^9",1,"^:",32,"^;",22,"^5",["^ ","^7","garden/units.cljc","^8",32,"^9",6,"^:",32,"^;",22],"^8<","^9Y"],"~$cm+",["^ ","^N","^3U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",291,"^9",1,"^8<","^8="],"~$ex",["^ ","^N","^1M","^7","garden/units.cljc","^8",302,"^9",1,"^:",302,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",302,"^9",10,"^:",302,"^;",12],"^8<","^8="],"~$dpcm?",["^ ","^N","^3:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",333,"^9",1,"^8<","^8="],"~$rem*",["^ ","^N","^3R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8<","^8="],"~$ch?",["^ ","^N","^47","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",303,"^9",1,"^8<","^8="],"~$kHz?",["^ ","^N","^45","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",328,"^9",1,"^8<","^8="],"~$rem-div",["^ ","^N","^43","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^8<","^8="],"~$conversions",["^ ","^5",["^ ","^7","garden/units.cljc","^8",71,"^9",3,"^:",71,"^;",14,"^8R",true,"^6","Map associating CSS unit types to their conversion values."],"^8R",true,"^N","^4?","^7","garden/units.cljc","^;",14,"^9",1,"^8",69,"^:",71,"^8<","~$cljs.core/IMap","^6","Map associating CSS unit types to their conversion values."],"~$dppx?",["^ ","^N","^2J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",334,"^9",1,"^8<","^8="],"~$percent-div",["^ ","^N","^4V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8<","^8="],"~$deg-",["^ ","^N","^4A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",315,"^9",1,"^8<","^8="],"~$rad?",["^ ","^N","^2F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^8<","^8="],"~$percent-",["^ ","^N","^4B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8<","^8="],"~$turn*",["^ ","^N","^2M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^8<","^8="],"~$time-units",["^ ","^N","^2O","^7","garden/units.cljc","^8",26,"^9",1,"^:",26,"^;",16,"^5",["^ ","^7","garden/units.cljc","^8",26,"^9",6,"^:",26,"^;",16],"^8<","^9Y"],"~$make-unit-predicate",["^ ","^8?",null,"^5",["^ ","^7","garden/units.cljc","^8",165,"^9",7,"^:",165,"^;",26,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"^N","^3O","^7","garden/units.cljc","^;",26,"^8A",["^K",[["^M"]]],"^8B",null,"^8C",["^K",[null,null]],"^9",1,"^8D",false,"^8",165,"^8E","^8=","^:",165,"^8F",1,"^8G",true,"^J",["^K",["^8@",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"~$in-div",["^ ","^N","^29","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",293,"^9",1,"^8<","^8="],"~$ex-div",["^ ","^N","^3N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8<","^8="],"~$turn?",["^ ","^N","^3S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^8<","^8="],"~$unit-re",["^ ","^5",["^ ","^7","garden/units.cljc","^8",154,"^9",3,"^:",154,"^;",10,"^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.","^8R",true],"^8R",true,"^N","^4H","^7","garden/units.cljc","^;",10,"^9",1,"^8",151,"^:",154,"^8<","~$any","^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured."],"~$vh-div",["^ ","^N","^4:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",309,"^9",1,"^8<","^8="],"~$percent?",["^ ","^N","^4N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^8<","^8="],"~$rad+",["^ ","^N","^44","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",317,"^9",1,"^8<","^8="],"~$vmax",["^ ","^N","^2A","^7","garden/units.cljc","^8",311,"^9",1,"^:",311,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",311,"^9",10,"^:",311,"^;",14],"^8<","^8="],"~$em-",["^ ","^N","^4P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",301,"^9",1,"^8<","^8="],"~$ex-",["^ ","^N","^46","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",302,"^9",1,"^8<","^8="]],"^13",["^ ","^E","^E","^[","^[","^V","^V"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:mm","~:vmin","~:kHz","~:given","~:pt","~:else","^9Q","~:%","~:px","~:rem","~:em","~:dppx","~:dpcm","~:Hz","~:pc","^9O","~:vh","~:s","~:ch","~:vw","~:deg","~:dpi","~:cm","~:turn","~:ex","~:vmax","~:x","~:ms","~:rad","~:grad","~:in"]],"~:order",["^<R","^<V","^<X","^=2","^=8","^=?","^=6","^=9","^==","^=>","~:s","^=<","^<T","^=1","^<[","^=0","^=7","^9Q","^<Y","^<Z","^9O","^<W","^<U","~:x","~:%","^=:","^=4","^=5","^=3","^<S","^=;"]],"^1=",["^ ","^12",["^G",[]],"^13",["^G",[]]],"^1>",["^ "],"^1?",["^10","^[","^V","^W","^Y"]],"^P","^E","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^67",[["^=C","~:static-fns"],true,["^=C","~:shadow-tweaks"],null,["^=C","~:source-map-inline"],null,["^=C","~:elide-asserts"],true,["^=C","~:optimize-constants"],null,["^=C","^1D"],null,["^=C","~:external-config"],null,["^=C","~:tooling-config"],null,["^=C","~:emit-constants"],null,["^=C","~:load-tests"],false,["^=C","~:form-size-threshold"],null,["^=C","~:global-goog-object&array"],null,["^=C","~:data-readers"],null,["^=C","~:infer-externs"],"~:auto",["^=C","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^=C","~:fn-invoke-direct"],null,["^=C","~:source-map"],null]]]