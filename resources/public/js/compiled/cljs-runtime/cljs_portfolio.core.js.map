{"version":3,"sources":["cljs_portfolio/core.cljs"],"mappings":";AAUA,gCAAA,hCAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,iCAAA,jCAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,uCAAWJ;;AAE7B,2BAAA,3BAAMK;AAAN,AACE,4BAAA,mFAAA,/GAACC;;AACD,AAACX;;AACD,OAACG","names":["cljs-portfolio.core/dev-setup","cljs-portfolio.config/debug?","cljs.core.println","cljs-portfolio.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","cljs-portfolio.views.views/app","cljs-portfolio.core/init","re-frame.core/dispatch-sync"],"sourcesContent":["(ns cljs-portfolio.core\n  (:require\n   [reagent.dom :as rdom]\n   [re-frame.core :as re-frame]\n   [cljs-portfolio.events :as events]\n   [cljs-portfolio.views.views :as views]\n   [cljs-portfolio.config :as config]\n   ))\n\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views/app] root-el)))\n\n(defn init []\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}